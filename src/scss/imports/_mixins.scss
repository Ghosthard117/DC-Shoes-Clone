@mixin tfix(){
	transform: perspective(1px);
    transform-style: preserve-3d;
    backface-visibility: hidden;
}
@mixin flex( $a, $b, $c, $d ){
	display			: flex;
	flex-flow		  : $a $b;
	justify-content	: $c;
	@if $b == 'nowrap' {
		align-items		: $d;	
	}@else{
		align-content	: $d;
	}	
}
@mixin neo( $state ,$br , $dis1 ){
	color			: var(--black);
	transition		: all .4s ease;
	border-radius 	: $br ;
	
	@if $state == 1 {
		background-color	: var(--white);
		box-shadow			: 
			$dis1    $dis1    $dis1*2 var(--main-shadow),
			$dis1*-1 $dis1*-1 $dis1*2 var(--sec-shadow),
			inset 0 0 0 transparent,
			inset 0 0 0 transparent;
	}@else if $state == 2 {
		background-color	: var(--white);
		box-shadow			: 
			0 0 0 transparent,
			0 0 0 transparent,
			inset $dis1    $dis1    $dis1*2 var(--main-shadow),
			inset $dis1*-1 $dis1*-1 $dis1*2 var(--sec-shadow);
	}
    
}
@mixin grid ( $repeatC , $thicknessC , $gap , $repeatR : initial, $thicknessR : initial ){
	display					: grid;
	grid-template-columns	: repeat( $repeatC , $thicknessC );
	@if $repeatR != 'initial' {
		grid-template-rows	: repeat( $repeatR , $thicknessR );
	}
	gap: $gap ;
}

@mixin tablet{
	@media screen and (max-width:800px){
		@content;
	}
}
@mixin mobile{
	@media screen and (max-width:600px){
		@content;
	}
}